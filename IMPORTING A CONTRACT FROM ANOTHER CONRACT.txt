// SPDX-License-Identifier: MIT
pragma solidity  ^0.8.19;

//The 'IMPORT ' keyword is not placed inside a contract code 
//It is used to import another contract into a contract
//The syntax is import "./nameofcontract.sol";
//meaning any changes made on the imported contract will be conveyed into the new contract.
//its also important to keep the version of solidity in mind when working with different contracts to avoid compilation errors

//now,incase an imported contract contains multiple contracts in it , and you would like to work with just one contract ,it would be more expensive to deploy 
//to avoid this we use something called 'NAMED IMPORTS' ,which specifies the contract which you would like to work with
//the syntax is import{nameofcontract} from "./nameoffile.sol";
//we can also import multiple contracts from another file
//e.g import {SimpleStorage,SimpleStorage2} from "./SimpleStorage";
import {SimpleStorage} from "./SimpleStorage.sol";


contract StorageFactory{

    //remember when we input a data type in a contract?
    //e.g uint256 public FavNo
    //the syntax of saving that variable is type ,visibility, name
    //we will do exactly that
    //the type will be : SimpleStorage 
    //this is because the same way in which a 'STRUCT ' keyword allows us to create a new type ,is the same way a 'CONTRACT ' keyword allows us to create a new type 
    SimpleStorage public simpleStorage; 

    function CreateSimpleStorageContract() public {
    //the question is ,how does StorageFactory contract know how Simple Storage conract looks like?
    //method1 : You can copy the contract code from the original contract and paste it on the other cpontract as done above
    //You are allowed to have multiple contracts on the same file .(THOUGH THIS ISNT THE BEST PRACTICE)
    //To avoid this you can use the 'IMPORT ' keyword to import anoher contract
    //e.g import "./SimpleStorage.sol";

    simpleStorage = new SimpleStorage();
    // the 'new ' keyword is how solidity knows to deploy a contract.
    }

}
